platform:
- x86
- x64

environment:
  global:
    MAKEJOBS: 2

  matrix:
  - SWIGLANG: python
    VSVER: 14
    VER: 36
    PY3: 1
  - SWIGLANG: python
    OSENVIRON: cygwin

install:
- date /T & time /T
- ps: >-
    If ($env:Platform -ne "x86") {
      $env:PCRE_PLATFORM="Win32"
      $env:JAVA_HOME="C:/Program Files (x86)/Java/jdk1.8.0"
      $env:VCVARS_PLATFORM="x86"
      $env:LANG_PLATFORM=""
      $env:PATH="C:\cygwin\bin;$env:PATH"
      $env:CYGSETUP="setup-x86.exe"
    } Else {
      $env:PCRE_PLATFORM="x64"
      $env:JAVA_HOME="C:/Program Files/Java/jdk1.8.0"
      $env:VCVARS_PLATFORM="amd64"
      $env:LANG_PLATFORM="-x64"
      $env:PATH="C:\cygwin64\bin;$env:PATH"
      $env:CYGSETUP="setup-x86_64.exe"
    }
- set CYGWIN=nodosfilewarning
- if not "%OSENVIRON%"=="cygwin" bash -c "cd /usr/bin && curl --retry 15 -s -L https://github.com/swig/cccl/archive/cccl-1.0.tar.gz | tar -xz --strip 1 cccl-cccl-1.0/cccl"
- ps: if ($env:OSENVIRON -ne "cygwin") { $env:VSCOMNTOOLS=(Get-Content ("env:VS" + "$env:VSVER" + "0COMNTOOLS")) }
- if not "%OSENVIRON%"=="cygwin" echo Using Visual Studio %VSVER%.0 at %VSCOMNTOOLS%
- if not "%OSENVIRON%"=="cygwin" call "%VSCOMNTOOLS%\..\..\VC\vcvarsall.bat" %VCVARS_PLATFORM%
- if not "%OSENVIRON%"=="cygwin" Tools\nuget-install.cmd pcre -Verbosity quiet -Version 8.33.0.1 -OutputDirectory C:\pcre
- if not "%OSENVIRON%"=="cygwin" set PCRE_ROOT=C:/pcre/pcre.8.33.0.1/build/native
- if not "%OSENVIRON%"=="cygwin" set PATH=C:\Python%VER%%LANG_PLATFORM%;%PATH%
- if not "%OSENVIRON%"=="cygwin" bash -c "which cl.exe"
- if not "%OSENVIRON%"=="cygwin" bash -c "cl.exe /? 2>&1 | head -n 1"
- if not "%OSENVIRON%"=="cygwin" bash -c "which csc.exe"
- if not "%OSENVIRON%"=="cygwin" bash -c "csc.exe /? | head -n 1"
- if not "%OSENVIRON%"=="cygwin" bash -c "which cccl"
- if not "%OSENVIRON%"=="cygwin" bash -c "cccl --version"
- if "%OSENVIRON%"=="cygwin" $CYGSETUP -q -P libpcre-devel-8.40-1
- if "%OSENVIRON%"=="cygwin" bash -c "gcc --version | head -n 1"
- if "%OSENVIRON%"=="cygwin" bash -c "g++ --version | head -n 1"
- python -V
- bash -c "which python"
- bash -c "python -V"
- bash -c "make --version | head -n 2"
- echo MAKEJOBS=%MAKEJOBS%
- uname -a

build_script:
- set CCCL_OPTIONS=--cccl-muffle /W3
- set CHECK_OPTIONS=CSHARPOPTIONS=-platform:%Platform%
  # Open dummy file descriptor to fix error on cygwin: ./configure: line 560: 0: Bad file descriptor
- if not "%OSENVIRON%"=="cygwin" bash -c "exec 0</dev/null && ./autogen.sh && time ./configure --disable-dependency-tracking --disable-ccache CC=cccl CXX=cccl CFLAGS='-O2' CXXFLAGS='-O2' LDFLAGS='--cccl-link /LTCG' PCRE_CFLAGS='-I%PCRE_ROOT%/include -DPCRE_STATIC' PCRE_LIBS='-L%PCRE_ROOT%/lib/v110/%PCRE_PLATFORM%/Release/static/utf8 -lpcre8' --without-perl5 --without-go --with-boost=C:/Libraries/boost || cat config.log"
- if "%OSENVIRON%"=="cygwin" bash -c "exec 0</dev/null && ./autogen.sh && time ./configure --without-alllang --with-$SWIGLANG --without-pcre --with-boost=C:/Libraries/boost || cat config.log"
- bash -c "time make -s -j%MAKEJOBS%"

test_script:
- set CCCL_OPTIONS=--cccl-muffle /W3 /EHsc
- .\swig.exe -version
- bash -c "file ./swig.exe"
- bash -c "time make -k check-%SWIGLANG%-version"
- bash -c "time make -k check-%SWIGLANG%-examples %CHECK_OPTIONS%"
- bash -c "time make -k check-%SWIGLANG%-test-suite -j%MAKEJOBS% %CHECK_OPTIONS%"

# Do not build on tags (GitHub only)
skip_tags: true
