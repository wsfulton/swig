# Important to have C:\MinGW\bin at beginning of path as there is a version of bash in the default path
# TODO: where is it - with Git?
# This 32 bit version of MinGW doesn't seem to configured correctly, possibly because it is running on
# 64 bit Windows - direct.h does not compile off64_t is not defined and struct stat is missing.

os: MinGW

platform:
  - x86

#
#configuration:
#  - Release
#
install:
  - date /T & time /T
  - path
#  - cinst php
  - set PATH=C:\MinGW\bin;C:\MinGW\msys\1.0\bin;%PATH%
#  - set PATH=C:\MinGW\msys\1.0\bin;C:\MinGW\bin;%PATH%
#  - set PATH=%PATH%;C:\tools\php
  - set PATH=C:\Python27;%PATH%
  - set
  - dir C:\
  - dir C:\Python27
  - dir C:\msys
  - dir C:\msys\1.0
  - dir C:\msys\1.0\bin
  - dir C:\MinGW
  - dir C:\MinGW\bin
  - dir C:\MinGW\msys\1.0\bin

before_build:
  - gcc -v
  - make --version
#  - php.exe --version

build_script:
  - echo C:\MinGW /mingw >> C:\MinGW\msys\1.0\etc\fstab
  - echo. >> C:\MinGW\msys\1.0\etc\fstab
  - type C:\MinGW\msys\1.0\etc\fstab
  - set
  - uname -a
  - bash -cl "echo $PATH"
  - bash -cl "ls -la /; echo xx; ls -la /c; echo xxx; ls -la /mingw; true"
#  - bash -cl "ls -la /bin; echo xx; ls -la /c; echo xxx; ls -la /mingw; true"
#  - bash -cl "mount; echo xx; ls /mingw/share/automake-1.11; echo xxx"
  - bash -cl "set"
  - dir "C:\MinGW\share\automake-1.11\Automake"
  - bash -c "find C:/Libraries -maxdepth 3 -type d || true"
  - pwd
  - set JAVA_HOME=c:\Program Files (x86)\Java\jdk1.8.0
  - set PATH=%JAVA_HOME%\bin;%PATH%
  - path
  - java -version
  - gcc --version
  - bash -c "pwd && ./autogen.sh && ./configure --without-pcre CXXFLAGS='-g -O2 -Wall -Wextra' CFLAGS='-g -O2 -Wall -Wextra' --with-java='%JAVA_HOME%\\bin\\java.exe' --with-javac='%JAVA_HOME%\\bin\\javac.exe' --with-javaincl='%JAVA_HOME%\\include' --without-perl5 --without-go --with-boost-libdir=C:/Libraries/boost"
  - make -s

test_script:
  - .\swig.exe -version
#  - .\ccache-swig.exe -V
#  - make check-errors-test-suite
#  - bash -c "make -k check-examples || true"
  - bash -c "make -k check-versions || true"
#  - bash -c "make -k check-java-test-suite || true"
#  - bash -c "cd Examples/test-suite/csharp && make allprotected.cpptest || true"
#  - bash -c "cd Examples/test-suite/csharp && find allprotected -name \"*.cs\" || true"
#  - bash -c "echo 'cd Examples/test-suite/csharp && find allprotected -name \"*.cs\" -exec echo \"{}\" \\+ || true'"
#  - bash -c "cd Examples/test-suite/csharp && find allprotected -name \"*.cs\" -exec echo \"{}\" \\; || true"
#  - bash -c "cd Examples/test-suite/csharp && find allprotected -name \"*.cs\" -exec echo \"{}\" \\+ || true"
#  - bash -c "cd Examples/test-suite/csharp && find allprotected -name \"*.cs\" -exec cmd //c echo \"{}\" \\+ || true"
#  - bash -c "cd Examples/test-suite/csharp && find allprotected -name \"*.cs\" -exec p2w \"{}\" \\+ || true"
#  - bash -c "cd Examples/test-suite/csharp && find allprotected -name \"*.cs\" -exec msys_p2w \"{}\" \\+ || true"
#  - bash -c "cd Examples/test-suite/csharp && find allprotected -name \"*.cs\" -exec echo \"{}\" | sed -e \"s,\\\\\\\\,/,g\" \\; || true"
#  - bash -c "cd Examples/test-suite/csharp && find allprotected -name \"*.cs\" -exec echo \"{}\" | sed -e 's,\\\\,/,g' \\; || true"
#  - bash -c "grep -i cygpath Source/Makefile* || true"
  - bash -c "make -k check-csharp-test-suite || true"
  - bash -c "make -k check-csharp-examples || true"

# Do not build on tags (GitHub only)
skip_tags: true 
